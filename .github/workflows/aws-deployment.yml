# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI/CD Pipeline - AWS

on:
  workflow_dispatch:

env:
  EKS_ZONE: eu-north-1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          server-id: docker.io
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Building and Pushing user-service
        run: mvn package dockerfile:push --file user-service/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push shipping-service
        run: mvn package dockerfile:push --file shipping-service/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push service-discovery
        run: mvn package dockerfile:push --file service-discovery/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push proxy-client
        run: mvn package dockerfile:push --file proxy-client/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building and Pushing product-service
        run: mvn package dockerfile:push --file product-service/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building and Pushing payment-service
        run: mvn package dockerfile:push --file payment-service/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building and Pushing order-service
        run: mvn package dockerfile:push --file order-service/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building and Pushing favourite-service
        run: mvn package dockerfile:push --file favourite-service/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push cloud-config
        run: mvn package dockerfile:push --file cloud-config/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push api-gateway
        run: mvn package dockerfile:push --file api-gateway/pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  Deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: kubectl - EKS cluster.
        uses: aws-actions/configure-aws-credentials@master
        env:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.EKS_ZONE }}
        with:
          args: apply -f k8s/
